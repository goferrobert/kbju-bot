from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler

from app.handlers.base import BaseHandler
from app.handlers.fsm_states import UserStates
from app.utils.logger import get_logger

logger = get_logger(__name__)

class HelpHandler(BaseHandler):
    """Handler for providing user assistance."""

    # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    MESSAGES = {
        "start": (
            "ü§ñ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–ø—Ä–∞–≤–∫—É!</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:"
        ),
        "commands": (
            "üìã <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
            "‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
            "‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "‚Ä¢ /weight - –í–≤–µ—Å—Ç–∏ –≤–µ—Å\n"
            "‚Ä¢ /steps - –í–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤\n"
            "‚Ä¢ /sport - –í–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ —Å–ø–æ—Ä—Ç–µ\n"
            "‚Ä¢ /progress - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
            "‚Ä¢ /preferences - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è\n"
            "‚Ä¢ /notifications - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏\n"
            "‚Ä¢ /cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ"
        ),
        "weight": (
            "‚öñÔ∏è <b>–í–≤–æ–¥ –≤–µ—Å–∞:</b>\n\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /weight –¥–ª—è –≤–≤–æ–¥–∞ –≤–µ—Å–∞\n"
            "‚Ä¢ –í–≤–µ–¥–∏—Ç–µ –≤–µ—Å –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 75.5)\n"
            "‚Ä¢ –í–µ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 30 –¥–æ 300 –∫–≥\n"
            "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–≤–æ–¥–∏—Ç—å –≤–µ—Å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è"
        ),
        "steps": (
            "üë£ <b>–í–≤–æ–¥ —à–∞–≥–æ–≤:</b>\n\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /steps –¥–ª—è –≤–≤–æ–¥–∞ —à–∞–≥–æ–≤\n"
            "‚Ä¢ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –∑–∞ –¥–µ–Ω—å\n"
            "‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 0 –¥–æ 100000\n"
            "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–≤–æ–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤–µ—á–µ—Ä–æ–º"
        ),
        "sport": (
            "üèÉ <b>–í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ —Å–ø–æ—Ä—Ç–µ:</b>\n\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /sport –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö\n"
            "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n"
            "‚Ä¢ –í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n"
            "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–≤–æ–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"
        ),
        "progress": (
            "üìä <b>–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:</b>\n\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /progress –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞\n"
            "‚Ä¢ –ë–æ—Ç –ø–æ–∫–∞–∂–µ—Ç –≥—Ä–∞—Ñ–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤–µ—Å–∞\n"
            "‚Ä¢ –û—Ç–æ–±—Ä–∞–∑–∏—Ç –ø—Ä–æ—Ü–µ–Ω—Ç –∂–∏—Ä–∞ (–µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω)\n"
            "‚Ä¢ –î–∞—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é —Ü–µ–ª–∏"
        ),
        "preferences": (
            "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π:</b>\n\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /preferences\n"
            "‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –ª—é–±–∏–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã\n"
            "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –Ω–µ–ª—é–±–∏–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–º–æ–≥—É—Ç –≤ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Ä–∞—Ü–∏–æ–Ω–∞"
        ),
        "notifications": (
            "üîî <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏:</b>\n\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /notifications\n"
            "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
            "‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è\n"
            "‚Ä¢ –ë–æ—Ç –±—É–¥–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö"
        ),
        "contact": (
            "üìû <b>–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏:</b>\n\n"
            "‚Ä¢ –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @support\n"
            "‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: –ü–Ω-–ü—Ç, 9:00-18:00\n"
            "‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: 1-2 —á–∞—Å–∞"
        )
    }

    # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    KEYBOARD = {
        "main": [
            [
                InlineKeyboardButton("–ö–æ–º–∞–Ω–¥—ã", callback_data="commands"),
                InlineKeyboardButton("–í–µ—Å", callback_data="weight")
            ],
            [
                InlineKeyboardButton("–®–∞–≥–∏", callback_data="steps"),
                InlineKeyboardButton("–°–ø–æ—Ä—Ç", callback_data="sport")
            ],
            [
                InlineKeyboardButton("–ü—Ä–æ–≥—Ä–µ—Å—Å", callback_data="progress"),
                InlineKeyboardButton("–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è", callback_data="preferences")
            ],
            [
                InlineKeyboardButton("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="notifications"),
                InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contact")
            ],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back")]
        ]
    }

    @BaseHandler.handle_errors
    async def start_help(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
        """
        –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–º–æ—â–∏.
        
        Args:
            update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
            
        Returns:
            int: –ö–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã
        """
        await self.send_message(
            update,
            self.MESSAGES["start"],
            reply_markup=InlineKeyboardMarkup(self.KEYBOARD["main"])
        )
        return UserStates.WAITING_FOR_HELP_SECTION

    @BaseHandler.handle_errors
    async def show_section(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
        """
        –ü–æ–∫–∞–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –ø–æ–º–æ—â–∏.
        
        Args:
            update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
            
        Returns:
            int: –ö–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã
        """
        query = update.callback_query
        await query.answer()

        if query.data == "back":
            return ConversationHandler.END

        section = query.data
        if section in self.MESSAGES:
            await self.send_message(
                update,
                self.MESSAGES[section],
                reply_markup=InlineKeyboardMarkup(self.KEYBOARD["main"])
            )

        return UserStates.WAITING_FOR_HELP_SECTION

def get_help_handler() -> ConversationHandler:
    """Get the help conversation handler."""
    handler = HelpHandler()
    return ConversationHandler(
        entry_points=[handler.start_help],
        states={
            UserStates.WAITING_FOR_HELP_SECTION: [
                handler.show_section
            ]
        },
        fallbacks=[]
    ) 