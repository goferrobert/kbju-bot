from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import asyncio

from app.handlers.base import BaseHandler
from app.utils.validation import ValidationError
from app.utils.logger import get_logger

logger = get_logger(__name__)

class InviteHandler(BaseHandler):
    """Handler for consultation invites."""

    # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    INVITE_DELAY = 60  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    INVITE_PHOTO_URL = "https://i.imgur.com/vyF6xNf.jpeg"
    
    # –¢–µ–∫—Å—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π
    MESSAGES = {
        "photo_caption": "üî• –ü–æ—Ä–∞ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ —Å–µ–±–µ –ª—É—á—à–µ–º—É!",
        "invite_text": (
            "üí° <b>–¢—ã –º–æ–∂–µ—à—å –¥–æ–±–∏—Ç—å—Å—è —Å–≤–æ–µ–π —Ü–µ–ª–∏</b> ‚Äî —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π, –∑–∞–±–æ—Ç–æ–π –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –ø–ª–∞–Ω–æ–º.\n\n"
            "–ì–æ—Ç–æ–≤ –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä—ë–¥ –≤–º–µ—Å—Ç–µ?"
        ),
        "button_text": "üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"
    }

    @BaseHandler.handle_errors
    async def send_consultation_invite(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã.
        
        Args:
            update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        """
        message = update.message or update.callback_query.message
        if not message:
            raise ValidationError("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")

        # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –≤–æ—Ä–æ–Ω–∫–æ–π
        await asyncio.sleep(self.INVITE_DELAY)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
        try:
            await message.reply_photo(
                photo=self.INVITE_PHOTO_URL,
                caption=self.MESSAGES["photo_caption"]
            )
        except Exception as e:
            logger.error(f"Error sending invite photo: {str(e)}", exc_info=True)
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(self.MESSAGES["button_text"], callback_data="invite_signup")]
        ])

        await self.send_message(
            update,
            self.MESSAGES["invite_text"],
            reply_markup=keyboard,
            parse_mode="HTML"
        )

    @BaseHandler.handle_errors
    async def handle_invite_signup(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.
        
        Args:
            update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        """
        query = update.callback_query
        await query.answer()

        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
        # –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –∏–ª–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç
        await self.send_message(
            update,
            "üéâ –û—Ç–ª–∏—á–Ω–æ! –°–∫–æ—Ä–æ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å —Ç–æ–±–æ–π –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏."
        )

def get_invite_handler() -> InviteHandler:
    """Get the invite handler instance."""
    return InviteHandler()
