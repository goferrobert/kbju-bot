from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ConversationHandler
from services.calculator import calculate_kbju
from funnel.invite import send_consultation_invite

GENDER, WEIGHT, HEIGHT, AGE, ACTIVITY, TARGET = range(6)

async def start(update, context):
    keyboard = [["–•–æ—á—É –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—á—ë—Ç —Å–≤–æ–µ–≥–æ –ö–ë–ñ–£"]]
    markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –ö–ë–ñ–£, –ø–æ–µ—Ö–∞–ª–∏!",
        reply_markup=markup
    )
    return GENDER

async def get_gender(update, context):
    keyboard = [["–ú—É–∂—á–∏–Ω–∞", "–ñ–µ–Ω—â–∏–Ω–∞"]]
    markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    text = update.message.text.lower()
    if "–º—É–∂" in text:
        context.user_data["sex"] = "–º—É–∂—á–∏–Ω–∞"
    elif "–∂–µ–Ω" in text:
        context.user_data["sex"] = "–∂–µ–Ω—â–∏–Ω–∞"
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏: –º—É–∂—á–∏–Ω–∞ –∏–ª–∏ –∂–µ–Ω—â–∏–Ω–∞.", reply_markup=markup)
        return GENDER
    await update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö (–∫–≥) ‚öñÔ∏è\n–ù–∞–ø—Ä–∏–º–µ—Ä: 68.5",
        reply_markup=ReplyKeyboardRemove()
    )
    return WEIGHT

async def get_weight(update, context):
    try:
        context.user_data["weight"] = float(update.message.text)
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö (—Å–º) üìè\n–ù–∞–ø—Ä–∏–º–µ—Ä: 172")
        return HEIGHT
    except ValueError:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–µ—Å —á–∏—Å–ª–æ–º:")
        return WEIGHT

async def get_height(update, context):
    try:
        context.user_data["height"] = float(update.message.text)
        await update.message.reply_text("–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç:")
        return AGE
    except ValueError:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ä–æ—Å—Ç —á–∏—Å–ª–æ–º:")
        return HEIGHT

async def get_age(update, context):
    try:
        context.user_data["age"] = int(update.message.text)
        keyboard = [["1", "2", "3", "4", "5"]]
        markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–≤–≤–µ–¥–∏ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 5): üèÉ‚Äç‚ôÄÔ∏è\n\n"
            "1Ô∏è‚É£ ‚Äî –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π\n–ø–æ—á—Ç–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, —Å–∏–¥—è—á–∞—è —Ä–∞–±–æ—Ç–∞, —Ä–µ–¥–∫–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏\n\n"
            "2Ô∏è‚É£ ‚Äî –õ—ë–≥–∫–∏–π\n1‚Äì3 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é, –ª—ë–≥–∫–∞—è –ø–æ–¥–≤–∏–∂–Ω–æ—Å—Ç—å\n\n"
            "3Ô∏è‚É£ ‚Äî –°—Ä–µ–¥–Ω–∏–π\n3‚Äì5 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é, —Ä–µ–≥—É–ª—è—Ä–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n\n"
            "4Ô∏è‚É£ ‚Äî –í—ã—Å–æ–∫–∏–π\n–∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ø–æ—á—Ç–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\n\n"
            "5Ô∏è‚É£ ‚Äî –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π\n–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏–ª–∏ —Ç—è–∂—ë–ª—ã–π —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π —Ç—Ä—É–¥",
            reply_markup=markup
        )
        return ACTIVITY
    except ValueError:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —á–∏—Å–ª–æ–º:")
        return AGE

async def get_activity(update, context):
    try:
        level = int(update.message.text)
        if level < 1 or level > 5:
            raise ValueError
        context.user_data["activity"] = level
        await update.message.reply_text(
            "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å–≤–æ–π —Ü–µ–ª–µ–≤–æ–π –≤–µ—Å (–≤ –∫–≥) üéØ\n–ù–∞–ø—Ä–∏–º–µ—Ä: 60",
            reply_markup=ReplyKeyboardRemove()
        )
        return TARGET
    except ValueError:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 5:")
        return ACTIVITY

async def get_target(update, context):
    # —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —á–∏—Å–ª–æ
    try:
        target = float(update.message.text)
    except ValueError:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Ü–µ–ª–µ–≤–æ–π –≤–µ—Å —á–∏—Å–ª–æ–º:")
        return TARGET

    # –¥–∞–ª—å—à–µ ‚Äî –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞—Å—á—ë—Ç –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    context.user_data["target_weight"] = target
    result = calculate_kbju(context.user_data)
    await update.message.reply_text(result)
    await send_consultation_invite(update, context)
    return ConversationHandler.END
